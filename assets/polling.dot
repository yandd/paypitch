digraph gocallvis {
    label="paycenter";
    labeljust="l";
    fontname="Ubuntu";
    fontsize="13";
    rankdir="LR";
    bgcolor="lightgray";
    style="solid";
    penwidth="0.5";
    pad="0.0";
    nodesep="0.35";

    node [shape="ellipse" style="filled" fillcolor="honeydew" fontname="Ubuntu" penwidth="1.0" margin="0.05,0.0"];
    edge [minlen="2"]

    subgraph "cluster_focus" {
        bgcolor="#e6ecfa";
label="polling";
labelloc="t";
labeljust="c";
fontsize="18";
        
        "polling.FillRefreshSeed" [ fillcolor="lightblue" label="FillRefreshSeed" penwidth="1.5" ]
        "polling.GetWorkerAmount" [ fillcolor="lightblue" label="GetWorkerAmount" penwidth="1.5" ]
        "polling.whenPinganDPaymentStart" [ label="whenPinganDPaymentStart" penwidth="0.5" fillcolor="lightblue" ]
        "polling.lockResource" [ penwidth="0.5" fillcolor="lightblue" label="lockResource" ]
        "polling.whenEciticAutobindSuccess" [ fillcolor="lightblue" label="whenEciticAutobindSuccess" penwidth="0.5" ]
        "polling.whenPinganDepositNotExist" [ label="whenPinganDepositNotExist" penwidth="0.5" fillcolor="lightblue" ]
        "polling.addPollingTask" [ fillcolor="lightblue" label="addPollingTask" penwidth="0.5" ]
        "polling.addPollingTask$1" [ fillcolor="lightblue" label="addPollingTask$1" style="dotted,filled" ]
        "polling.whenPinganDepositSuccess" [ penwidth="0.5" fillcolor="lightblue" label="whenPinganDepositSuccess" ]
        "polling.whenEciticWithdrawFeeSuccess" [ fillcolor="lightblue" label="whenEciticWithdrawFeeSuccess" penwidth="0.5" ]
        "polling.whenPinganUnfreezeSuccess" [ fillcolor="lightblue" label="whenPinganUnfreezeSuccess" penwidth="0.5" ]
        "polling.whenEciticTransferNotExist" [ fillcolor="lightblue" label="whenEciticTransferNotExist" penwidth="0.5" ]
        "polling.whenEciticFreezeStart" [ fillcolor="lightblue" label="whenEciticFreezeStart" penwidth="0.5" ]
        "polling.processEciticPayment" [ fillcolor="lightblue" label="processEciticPayment" penwidth="0.5" ]
        "polling.whenEciticFreezeSuccess" [ fillcolor="lightblue" label="whenEciticFreezeSuccess" penwidth="0.5" ]
        "polling.whenEciticDPaymentStart" [ fillcolor="lightblue" label="whenEciticDPaymentStart" penwidth="0.5" ]
        "polling.whenPinganUnfreezePayNotExist" [ fillcolor="lightblue" label="whenPinganUnfreezePayNotExist" penwidth="0.5" ]
        "polling.whenPinganUnfreezePaySuccess" [ fillcolor="lightblue" label="whenPinganUnfreezePaySuccess" penwidth="0.5" ]
        "polling.whenEciticAdjustFailed" [ fillcolor="lightblue" label="whenEciticAdjustFailed" penwidth="0.5" ]
        "polling.lockAdjustResource" [ label="lockAdjustResource" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenEciticUnfreezePayNotExist" [ penwidth="0.5" fillcolor="lightblue" label="whenEciticUnfreezePayNotExist" ]
        "polling.excuteEciticPolling" [ fillcolor="lightblue" label="excuteEciticPolling" penwidth="0.5" ]
        "polling.processEciticHPayment" [ fillcolor="lightblue" label="processEciticHPayment" penwidth="0.5" ]
        "polling.pollingEciticCommon" [ fillcolor="lightblue" label="pollingEciticCommon" penwidth="0.5" ]
        "polling.sleepWhenNotExist" [ fillcolor="lightblue" label="sleepWhenNotExist" penwidth="0.5" ]
        "polling.alarmNotExist" [ fillcolor="lightblue" label="alarmNotExist" penwidth="0.5" ]
        "polling.whenEciticUnfreezePayStart" [ fillcolor="lightblue" label="whenEciticUnfreezePayStart" penwidth="0.5" ]
        "polling.whenEciticUnfreezeStart" [ fillcolor="lightblue" label="whenEciticUnfreezeStart" penwidth="0.5" ]
        "polling.whenEciticWithdrawStart" [ fillcolor="lightblue" label="whenEciticWithdrawStart" penwidth="0.5" ]
        "polling.whenEciticWithdrawFailed" [ fillcolor="lightblue" label="whenEciticWithdrawFailed" penwidth="0.5" ]
        "polling.whenEciticWithdrawFeeStart" [ fillcolor="lightblue" label="whenEciticWithdrawFeeStart" penwidth="0.5" ]
        "polling.whenEciticHRefundStart" [ fillcolor="lightblue" label="whenEciticHRefundStart" penwidth="0.5" ]
        "polling.whenEciticHRefundFailed" [ label="whenEciticHRefundFailed" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenEciticInterestStart" [ penwidth="0.5" fillcolor="lightblue" label="whenEciticInterestStart" ]
        "polling.lockEciticInterestResource" [ fillcolor="lightblue" label="lockEciticInterestResource" penwidth="0.5" ]
        "polling.whenEciticAdjustStart" [ fillcolor="lightblue" label="whenEciticAdjustStart" penwidth="0.5" ]
        "polling.whenEciticAdjustBackStart" [ fillcolor="lightblue" label="whenEciticAdjustBackStart" penwidth="0.5" ]
        "polling.whenEciticAutobindStart" [ fillcolor="lightblue" label="whenEciticAutobindStart" penwidth="0.5" ]
        "polling.whenEciticAutobindFailed" [ fillcolor="lightblue" label="whenEciticAutobindFailed" penwidth="0.5" ]
        "polling.whenEciticTransferStart" [ fillcolor="lightblue" label="whenEciticTransferStart" penwidth="0.5" ]
        "polling.whenEciticFreezeNotExist" [ label="whenEciticFreezeNotExist" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenEciticUnfreezeNotExist" [ fillcolor="lightblue" label="whenEciticUnfreezeNotExist" penwidth="0.5" ]
        "polling.whenEciticWithdrawNotExist" [ fillcolor="lightblue" label="whenEciticWithdrawNotExist" penwidth="0.5" ]
        "polling.whenEciticWithdrawFeeNotExist" [ penwidth="0.5" fillcolor="lightblue" label="whenEciticWithdrawFeeNotExist" ]
        "polling.whenEciticHRefundNotExist" [ fillcolor="lightblue" label="whenEciticHRefundNotExist" penwidth="0.5" ]
        "polling.whenEciticInterestNotExist" [ label="whenEciticInterestNotExist" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenEciticAdjustNotExist" [ fillcolor="lightblue" label="whenEciticAdjustNotExist" penwidth="0.5" ]
        "polling.whenEciticAdjustBackNotExist" [ fillcolor="lightblue" label="whenEciticAdjustBackNotExist" penwidth="0.5" ]
        "polling.whenEciticAutobindNotExist" [ fillcolor="lightblue" label="whenEciticAutobindNotExist" penwidth="0.5" ]
        "polling.whenEciticDPaymentNotExist" [ penwidth="0.5" fillcolor="lightblue" label="whenEciticDPaymentNotExist" ]
        "polling.whenEciticFreezeProcessing" [ fillcolor="lightblue" label="whenEciticFreezeProcessing" penwidth="0.5" ]
        "polling.whenEciticUnfreezePayProcessing" [ fillcolor="lightblue" label="whenEciticUnfreezePayProcessing" penwidth="0.5" ]
        "polling.whenEciticUnfreezeProcessing" [ fillcolor="lightblue" label="whenEciticUnfreezeProcessing" penwidth="0.5" ]
        "polling.whenEciticWithdrawProcessing" [ fillcolor="lightblue" label="whenEciticWithdrawProcessing" penwidth="0.5" ]
        "polling.whenEciticWithdrawFeeProcessing" [ label="whenEciticWithdrawFeeProcessing" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenEciticHRefundProcessing" [ fillcolor="lightblue" label="whenEciticHRefundProcessing" penwidth="0.5" ]
        "polling.whenEciticInterestProcessing" [ fillcolor="lightblue" label="whenEciticInterestProcessing" penwidth="0.5" ]
        "polling.whenEciticAdjustProcessing" [ penwidth="0.5" fillcolor="lightblue" label="whenEciticAdjustProcessing" ]
        "polling.whenEciticAdjustBackProcessing" [ fillcolor="lightblue" label="whenEciticAdjustBackProcessing" penwidth="0.5" ]
        "polling.whenEciticAutobindProcessing" [ fillcolor="lightblue" label="whenEciticAutobindProcessing" penwidth="0.5" ]
        "polling.whenEciticTransferProcessing" [ label="whenEciticTransferProcessing" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenEciticDPaymentProcessing" [ penwidth="0.5" fillcolor="lightblue" label="whenEciticDPaymentProcessing" ]
        "polling.whenEciticUnfreezePaySuccess" [ fillcolor="lightblue" label="whenEciticUnfreezePaySuccess" penwidth="0.5" ]
        "polling.whenEciticUnfreezeSuccess" [ fillcolor="lightblue" label="whenEciticUnfreezeSuccess" penwidth="0.5" ]
        "polling.whenEciticWithdrawSuccess" [ fillcolor="lightblue" label="whenEciticWithdrawSuccess" penwidth="0.5" ]
        "polling.createWithdrawFeeTrans" [ fillcolor="lightblue" label="createWithdrawFeeTrans" penwidth="0.5" ]
        "polling.whenEciticHRefundSuccess" [ fillcolor="lightblue" label="whenEciticHRefundSuccess" penwidth="0.5" ]
        "polling.whenEciticInterestSuccess" [ label="whenEciticInterestSuccess" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenEciticAdjustSuccess" [ penwidth="0.5" fillcolor="lightblue" label="whenEciticAdjustSuccess" ]
        "polling.whenEciticAdjustBackSuccess" [ fillcolor="lightblue" label="whenEciticAdjustBackSuccess" penwidth="0.5" ]
        "polling.whenEciticTransferSuccess" [ fillcolor="lightblue" label="whenEciticTransferSuccess" penwidth="0.5" ]
        "polling.whenEciticDPaymentSuccess" [ label="whenEciticDPaymentSuccess" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenEciticFreezeFailed" [ fillcolor="lightblue" label="whenEciticFreezeFailed" penwidth="0.5" ]
        "polling.whenEciticUnfreezePayFailed" [ penwidth="0.5" fillcolor="lightblue" label="whenEciticUnfreezePayFailed" ]
        "polling.whenEciticUnfreezeFailed" [ fillcolor="lightblue" label="whenEciticUnfreezeFailed" penwidth="0.5" ]
        "polling.whenEciticWithdrawFeeFailed" [ fillcolor="lightblue" label="whenEciticWithdrawFeeFailed" penwidth="0.5" ]
        "polling.whenEciticInterestFailed" [ fillcolor="lightblue" label="whenEciticInterestFailed" penwidth="0.5" ]
        "polling.whenEciticAdjustBackFailed" [ fillcolor="lightblue" label="whenEciticAdjustBackFailed" penwidth="0.5" ]
        "polling.whenEciticTransferFailed" [ fillcolor="lightblue" label="whenEciticTransferFailed" penwidth="0.5" ]
        "polling.whenEciticDPaymentFailed" [ label="whenEciticDPaymentFailed" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenPinganWithdrawNotExist" [ fillcolor="lightblue" label="whenPinganWithdrawNotExist" penwidth="0.5" ]
        "polling.whenPinganWithdrawSuccess" [ fillcolor="lightblue" label="whenPinganWithdrawSuccess" penwidth="0.5" ]
        "polling.pollingPinganDepositWithdrawCommon" [ fillcolor="lightblue" label="pollingPinganDepositWithdrawCommon" penwidth="0.5" ]
        "polling.whenPinganDepositStart" [ penwidth="0.5" fillcolor="lightblue" label="whenPinganDepositStart" ]
        "polling.whenPinganDepositDownStart" [ fillcolor="lightblue" label="whenPinganDepositDownStart" penwidth="0.5" ]
        "polling.whenPinganWithdrawStart" [ fillcolor="lightblue" label="whenPinganWithdrawStart" penwidth="0.5" ]
        "polling.whenPinganWithdrawDownStart" [ fillcolor="lightblue" label="whenPinganWithdrawDownStart" penwidth="0.5" ]
        "polling.whenPinganDepositDownNotExist" [ fillcolor="lightblue" label="whenPinganDepositDownNotExist" penwidth="0.5" ]
        "polling.whenPinganWithdrawDownNotExist" [ fillcolor="lightblue" label="whenPinganWithdrawDownNotExist" penwidth="0.5" ]
        "polling.whenPinganDepositProcessing" [ fillcolor="lightblue" label="whenPinganDepositProcessing" penwidth="0.5" ]
        "polling.whenPinganDepositDownProcessing" [ fillcolor="lightblue" label="whenPinganDepositDownProcessing" penwidth="0.5" ]
        "polling.whenPinganWithdrawProcessing" [ fillcolor="lightblue" label="whenPinganWithdrawProcessing" penwidth="0.5" ]
        "polling.whenPinganWithdrawDownProcessing" [ fillcolor="lightblue" label="whenPinganWithdrawDownProcessing" penwidth="0.5" ]
        "polling.whenPinganDepositDownSuccess" [ fillcolor="lightblue" label="whenPinganDepositDownSuccess" penwidth="0.5" ]
        "polling.whenPinganWithdrawDownSuccess" [ fillcolor="lightblue" label="whenPinganWithdrawDownSuccess" penwidth="0.5" ]
        "polling.whenPinganDepositFailed" [ fillcolor="lightblue" label="whenPinganDepositFailed" penwidth="0.5" ]
        "polling.whenPinganDepositDownFailed" [ fillcolor="lightblue" label="whenPinganDepositDownFailed" penwidth="0.5" ]
        "polling.whenPinganWithdrawFailed" [ label="whenPinganWithdrawFailed" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenPinganWithdrawDownFailed" [ fillcolor="lightblue" label="whenPinganWithdrawDownFailed" penwidth="0.5" ]
        "polling.StartMultiDispatcher$1" [ style="dotted,filled" fillcolor="lightblue" label="StartMultiDispatcher$1" ]
        "polling.setRunningFlag" [ fillcolor="lightblue" label="setRunningFlag" penwidth="0.5" ]
        "polling.StartMultiDispatcher" [ fillcolor="lightblue" label="StartMultiDispatcher" penwidth="1.5" ]
        "polling.QueryPollingQueue" [ label="QueryPollingQueue" penwidth="1.5" fillcolor="lightblue" ]
        "polling.StartMultiDispatcher$2" [ fillcolor="lightblue" label="StartMultiDispatcher$2" style="dotted,filled" ]
        "polling.work" [ penwidth="0.5" fillcolor="lightblue" label="work" ]
        "polling.workerIncrease" [ fillcolor="lightblue" label="workerIncrease" penwidth="0.5" ]
        "polling.workerDecrease" [ fillcolor="lightblue" label="workerDecrease" penwidth="0.5" ]
        "polling.delRunningFlag" [ fillcolor="lightblue" label="delRunningFlag" penwidth="0.5" ]
        "polling.getRunningFlag" [ fillcolor="lightblue" label="getRunningFlag" penwidth="0.5" ]
        "polling.excutePolling" [ fillcolor="lightblue" label="excutePolling" penwidth="0.5" ]
        "polling.tellBankSystem" [ fillcolor="lightblue" label="tellBankSystem" penwidth="0.5" ]
        "polling.pollingPinganTransCommon" [ fillcolor="lightblue" label="pollingPinganTransCommon" penwidth="0.5" ]
        "polling.whenPinganFreezeStart" [ fillcolor="lightblue" label="whenPinganFreezeStart" penwidth="0.5" ]
        "polling.whenPinganFreezeSuccess" [ label="whenPinganFreezeSuccess" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenPinganUnfreezePayStart" [ fillcolor="lightblue" label="whenPinganUnfreezePayStart" penwidth="0.5" ]
        "polling.whenPinganUnfreezeStart" [ penwidth="0.5" fillcolor="lightblue" label="whenPinganUnfreezeStart" ]
        "polling.whenPinganFreezeNotExist" [ fillcolor="lightblue" label="whenPinganFreezeNotExist" penwidth="0.5" ]
        "polling.whenPinganUnfreezeNotExist" [ label="whenPinganUnfreezeNotExist" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenPinganDPaymentNotExist" [ penwidth="0.5" fillcolor="lightblue" label="whenPinganDPaymentNotExist" ]
        "polling.whenPinganFreezeProcessing" [ fillcolor="lightblue" label="whenPinganFreezeProcessing" penwidth="0.5" ]
        "polling.whenPinganUnfreezePayProcessing" [ fillcolor="lightblue" label="whenPinganUnfreezePayProcessing" penwidth="0.5" ]
        "polling.whenPinganUnfreezeProcessing" [ fillcolor="lightblue" label="whenPinganUnfreezeProcessing" penwidth="0.5" ]
        "polling.whenPinganDPaymentProcessing" [ fillcolor="lightblue" label="whenPinganDPaymentProcessing" penwidth="0.5" ]
        "polling.whenPinganDPaymentSuccess" [ label="whenPinganDPaymentSuccess" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenPinganFreezeFailed" [ penwidth="0.5" fillcolor="lightblue" label="whenPinganFreezeFailed" ]
        "polling.whenPinganUnfreezePayFailed" [ fillcolor="lightblue" label="whenPinganUnfreezePayFailed" penwidth="0.5" ]
        "polling.whenPinganUnfreezeFailed" [ label="whenPinganUnfreezeFailed" penwidth="0.5" fillcolor="lightblue" ]
        "polling.whenPinganDPaymentFailed" [ penwidth="0.5" fillcolor="lightblue" label="whenPinganDPaymentFailed" ]
        "polling.excutePinganPolling" [ fillcolor="lightblue" label="excutePinganPolling" penwidth="0.5" ]
        "polling.conditionSleep" [ fillcolor="lightblue" label="conditionSleep" penwidth="0.5" ]
        "polling.reduceRefreshSeed" [ fillcolor="lightblue" label="reduceRefreshSeed" penwidth="0.5" ]
        "polling.Run" [ fillcolor="lightblue" label="Run" penwidth="1.5" ]
        
    }

    "polling.FillRefreshSeed" -> "polling.GetWorkerAmount" [  ]
    "polling.whenPinganDPaymentStart" -> "polling.lockResource" [  ]
    "polling.whenEciticAutobindSuccess" -> "polling.lockResource" [  ]
    "polling.whenPinganDepositNotExist" -> "polling.lockResource" [  ]
    "polling.addPollingTask" -> "polling.addPollingTask$1" [ arrowhead="normalnoneodot" ]
    "polling.whenPinganDepositNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenPinganDepositSuccess" -> "polling.lockResource" [  ]
    "polling.whenPinganDepositNotExist" -> "polling.whenPinganDepositSuccess" [  ]
    "polling.whenEciticWithdrawFeeSuccess" -> "polling.lockResource" [  ]
    "polling.whenPinganUnfreezeSuccess" -> "polling.lockResource" [  ]
    "polling.whenEciticTransferNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticTransferNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenEciticFreezeStart" -> "polling.lockResource" [  ]
    "polling.processEciticPayment" -> "polling.lockResource" [  ]
    "polling.whenEciticFreezeSuccess" -> "polling.lockResource" [  ]
    "polling.whenEciticDPaymentStart" -> "polling.lockResource" [  ]
    "polling.whenPinganUnfreezePayNotExist" -> "polling.lockResource" [  ]
    "polling.whenPinganUnfreezePayNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenPinganUnfreezePaySuccess" -> "polling.lockResource" [  ]
    "polling.whenPinganUnfreezePayNotExist" -> "polling.whenPinganUnfreezePaySuccess" [  ]
    "polling.whenEciticAdjustFailed" -> "polling.lockAdjustResource" [  ]
    "polling.whenEciticUnfreezePayNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticUnfreezePayNotExist" -> "polling.addPollingTask" [  ]
    "polling.excuteEciticPolling" -> "polling.processEciticPayment" [  ]
    "polling.processEciticHPayment" -> "polling.lockResource" [  ]
    "polling.excuteEciticPolling" -> "polling.processEciticHPayment" [  ]
    "polling.pollingEciticCommon" -> "polling.sleepWhenNotExist" [  ]
    "polling.pollingEciticCommon" -> "polling.alarmNotExist" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticFreezeStart" [ style="dashed" ]
    "polling.whenEciticUnfreezePayStart" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezePayStart" [ style="dashed" ]
    "polling.whenEciticUnfreezeStart" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezeStart" [ style="dashed" ]
    "polling.whenEciticWithdrawStart" -> "polling.lockResource" [  ]
    "polling.whenEciticWithdrawFailed" -> "polling.lockResource" [  ]
    "polling.whenEciticWithdrawStart" -> "polling.whenEciticWithdrawFailed" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawStart" [ style="dashed" ]
    "polling.whenEciticWithdrawFeeStart" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawFeeStart" [ style="dashed" ]
    "polling.whenEciticHRefundStart" -> "polling.lockResource" [  ]
    "polling.whenEciticHRefundFailed" -> "polling.lockResource" [  ]
    "polling.whenEciticHRefundStart" -> "polling.whenEciticHRefundFailed" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticHRefundStart" [ style="dashed" ]
    "polling.whenEciticInterestStart" -> "polling.lockEciticInterestResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticInterestStart" [ style="dashed" ]
    "polling.whenEciticAdjustStart" -> "polling.lockAdjustResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustStart" [ style="dashed" ]
    "polling.whenEciticAdjustBackStart" -> "polling.lockAdjustResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustBackStart" [ style="dashed" ]
    "polling.whenEciticAutobindStart" -> "polling.lockResource" [  ]
    "polling.whenEciticAutobindFailed" -> "polling.lockResource" [  ]
    "polling.whenEciticAutobindStart" -> "polling.whenEciticAutobindFailed" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAutobindStart" [ style="dashed" ]
    "polling.whenEciticTransferStart" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticTransferStart" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticDPaymentStart" [ style="dashed" ]
    "polling.whenEciticFreezeNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticFreezeNotExist" -> "polling.addPollingTask" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticFreezeNotExist" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezePayNotExist" [ style="dashed" ]
    "polling.whenEciticUnfreezeNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticUnfreezeNotExist" -> "polling.addPollingTask" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezeNotExist" [ style="dashed" ]
    "polling.whenEciticWithdrawNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticWithdrawNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenEciticWithdrawNotExist" -> "polling.whenEciticWithdrawFailed" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawNotExist" [ style="dashed" ]
    "polling.whenEciticWithdrawFeeNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticWithdrawFeeNotExist" -> "polling.addPollingTask" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawFeeNotExist" [ style="dashed" ]
    "polling.whenEciticHRefundNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticHRefundNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenEciticHRefundNotExist" -> "polling.whenEciticWithdrawFailed" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticHRefundNotExist" [ style="dashed" ]
    "polling.whenEciticInterestNotExist" -> "polling.lockEciticInterestResource" [  ]
    "polling.whenEciticInterestNotExist" -> "polling.addPollingTask" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticInterestNotExist" [ style="dashed" ]
    "polling.whenEciticAdjustNotExist" -> "polling.lockAdjustResource" [  ]
    "polling.whenEciticAdjustNotExist" -> "polling.addPollingTask" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustNotExist" [ style="dashed" ]
    "polling.whenEciticAdjustBackNotExist" -> "polling.lockAdjustResource" [  ]
    "polling.whenEciticAdjustBackNotExist" -> "polling.addPollingTask" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustBackNotExist" [ style="dashed" ]
    "polling.whenEciticAutobindNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticAutobindNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenEciticAutobindNotExist" -> "polling.whenEciticWithdrawFailed" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAutobindNotExist" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticTransferNotExist" [ style="dashed" ]
    "polling.whenEciticDPaymentNotExist" -> "polling.lockResource" [  ]
    "polling.whenEciticDPaymentNotExist" -> "polling.addPollingTask" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticDPaymentNotExist" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticFreezeProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezePayProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezeProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawFeeProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticHRefundProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticInterestProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustBackProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAutobindProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticTransferProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticDPaymentProcessing" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticFreezeSuccess" [ style="dashed" ]
    "polling.whenEciticUnfreezePaySuccess" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezePaySuccess" [ style="dashed" ]
    "polling.whenEciticUnfreezeSuccess" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezeSuccess" [ style="dashed" ]
    "polling.whenEciticWithdrawSuccess" -> "polling.lockResource" [  ]
    "polling.whenEciticWithdrawSuccess" -> "polling.createWithdrawFeeTrans" [  ]
    "polling.whenEciticWithdrawSuccess" -> "polling.addPollingTask" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawSuccess" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawFeeSuccess" [ style="dashed" ]
    "polling.whenEciticHRefundSuccess" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticHRefundSuccess" [ style="dashed" ]
    "polling.whenEciticInterestSuccess" -> "polling.lockEciticInterestResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticInterestSuccess" [ style="dashed" ]
    "polling.whenEciticAdjustSuccess" -> "polling.lockAdjustResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustSuccess" [ style="dashed" ]
    "polling.whenEciticAdjustBackSuccess" -> "polling.lockAdjustResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustBackSuccess" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAutobindSuccess" [ style="dashed" ]
    "polling.whenEciticTransferSuccess" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticTransferSuccess" [ style="dashed" ]
    "polling.whenEciticDPaymentSuccess" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticDPaymentSuccess" [ style="dashed" ]
    "polling.whenEciticFreezeFailed" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticFreezeFailed" [ style="dashed" ]
    "polling.whenEciticUnfreezePayFailed" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezePayFailed" [ style="dashed" ]
    "polling.whenEciticUnfreezeFailed" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticUnfreezeFailed" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawFailed" [ style="dashed" ]
    "polling.whenEciticWithdrawFeeFailed" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticWithdrawFeeFailed" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticHRefundFailed" [ style="dashed" ]
    "polling.whenEciticInterestFailed" -> "polling.lockEciticInterestResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticInterestFailed" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustFailed" [ style="dashed" ]
    "polling.whenEciticAdjustBackFailed" -> "polling.lockAdjustResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAdjustBackFailed" [ style="dashed" ]
    "polling.pollingEciticCommon" -> "polling.whenEciticAutobindFailed" [ style="dashed" ]
    "polling.whenEciticTransferFailed" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticTransferFailed" [ style="dashed" ]
    "polling.whenEciticDPaymentFailed" -> "polling.lockResource" [  ]
    "polling.pollingEciticCommon" -> "polling.whenEciticDPaymentFailed" [ style="dashed" ]
    "polling.excuteEciticPolling" -> "polling.pollingEciticCommon" [  ]
    "polling.whenPinganWithdrawNotExist" -> "polling.lockResource" [  ]
    "polling.whenPinganWithdrawNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenPinganWithdrawSuccess" -> "polling.lockResource" [  ]
    "polling.whenPinganWithdrawNotExist" -> "polling.whenPinganWithdrawSuccess" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.sleepWhenNotExist" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.alarmNotExist" [  ]
    "polling.whenPinganDepositStart" -> "polling.lockResource" [  ]
    "polling.whenPinganDepositStart" -> "polling.whenPinganDepositSuccess" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositStart" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositDownStart" [ style="dashed" ]
    "polling.whenPinganWithdrawStart" -> "polling.lockResource" [  ]
    "polling.whenPinganWithdrawStart" -> "polling.whenPinganWithdrawSuccess" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawStart" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawDownStart" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositNotExist" [ style="dashed" ]
    "polling.whenPinganDepositDownNotExist" -> "polling.lockResource" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositDownNotExist" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawNotExist" [ style="dashed" ]
    "polling.whenPinganWithdrawDownNotExist" -> "polling.lockResource" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawDownNotExist" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositProcessing" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositDownProcessing" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawProcessing" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawDownProcessing" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositSuccess" [ style="dashed" ]
    "polling.whenPinganDepositDownSuccess" -> "polling.lockResource" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositDownSuccess" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawSuccess" [ style="dashed" ]
    "polling.whenPinganWithdrawDownSuccess" -> "polling.lockResource" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawDownSuccess" [ style="dashed" ]
    "polling.whenPinganDepositFailed" -> "polling.lockResource" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositFailed" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganDepositDownFailed" [ style="dashed" ]
    "polling.whenPinganWithdrawFailed" -> "polling.lockResource" [  ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawFailed" [ style="dashed" ]
    "polling.pollingPinganDepositWithdrawCommon" -> "polling.whenPinganWithdrawDownFailed" [ style="dashed" ]
    "polling.StartMultiDispatcher$1" -> "polling.setRunningFlag" [  ]
    "polling.StartMultiDispatcher" -> "polling.StartMultiDispatcher$1" [ arrowhead="normalnoneodot" ]
    "polling.StartMultiDispatcher" -> "polling.QueryPollingQueue" [  ]
    "polling.StartMultiDispatcher" -> "polling.StartMultiDispatcher$2" [ arrowhead="normalnoneodot" ]
    "polling.StartMultiDispatcher" -> "polling.GetWorkerAmount" [  ]
    "polling.work" -> "polling.workerIncrease" [  ]
    "polling.work" -> "polling.workerDecrease" [ arrowhead="normalnoneodiamond" ]
    "polling.work" -> "polling.setRunningFlag" [  ]
    "polling.work" -> "polling.delRunningFlag" [  ]
    "polling.work" -> "polling.getRunningFlag" [  ]
    "polling.excutePolling" -> "polling.tellBankSystem" [  ]
    "polling.excutePolling" -> "polling.excuteEciticPolling" [  ]
    "polling.pollingPinganTransCommon" -> "polling.sleepWhenNotExist" [  ]
    "polling.pollingPinganTransCommon" -> "polling.alarmNotExist" [  ]
    "polling.whenPinganFreezeStart" -> "polling.lockResource" [  ]
    "polling.whenPinganFreezeSuccess" -> "polling.lockResource" [  ]
    "polling.whenPinganFreezeStart" -> "polling.whenPinganFreezeSuccess" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganFreezeStart" [ style="dashed" ]
    "polling.whenPinganUnfreezePayStart" -> "polling.lockResource" [  ]
    "polling.whenPinganUnfreezePayStart" -> "polling.whenPinganUnfreezePaySuccess" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezePayStart" [ style="dashed" ]
    "polling.whenPinganUnfreezeStart" -> "polling.lockResource" [  ]
    "polling.whenPinganUnfreezeStart" -> "polling.whenPinganUnfreezeSuccess" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezeStart" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganDPaymentStart" [ style="dashed" ]
    "polling.whenPinganFreezeNotExist" -> "polling.lockResource" [  ]
    "polling.whenPinganFreezeNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenPinganFreezeNotExist" -> "polling.whenPinganFreezeSuccess" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganFreezeNotExist" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezePayNotExist" [ style="dashed" ]
    "polling.whenPinganUnfreezeNotExist" -> "polling.lockResource" [  ]
    "polling.whenPinganUnfreezeNotExist" -> "polling.addPollingTask" [  ]
    "polling.whenPinganUnfreezeNotExist" -> "polling.whenPinganUnfreezeSuccess" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezeNotExist" [ style="dashed" ]
    "polling.whenPinganDPaymentNotExist" -> "polling.lockResource" [  ]
    "polling.whenPinganDPaymentNotExist" -> "polling.addPollingTask" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganDPaymentNotExist" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganFreezeProcessing" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezePayProcessing" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezeProcessing" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganDPaymentProcessing" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganFreezeSuccess" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezePaySuccess" [ style="dashed" ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezeSuccess" [ style="dashed" ]
    "polling.whenPinganDPaymentSuccess" -> "polling.lockResource" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganDPaymentSuccess" [ style="dashed" ]
    "polling.whenPinganFreezeFailed" -> "polling.lockResource" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganFreezeFailed" [ style="dashed" ]
    "polling.whenPinganUnfreezePayFailed" -> "polling.lockResource" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezePayFailed" [ style="dashed" ]
    "polling.whenPinganUnfreezeFailed" -> "polling.lockResource" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganUnfreezeFailed" [ style="dashed" ]
    "polling.whenPinganDPaymentFailed" -> "polling.lockResource" [  ]
    "polling.pollingPinganTransCommon" -> "polling.whenPinganDPaymentFailed" [ style="dashed" ]
    "polling.excutePinganPolling" -> "polling.pollingPinganTransCommon" [  ]
    "polling.excutePinganPolling" -> "polling.pollingPinganDepositWithdrawCommon" [  ]
    "polling.excutePolling" -> "polling.excutePinganPolling" [  ]
    "polling.work" -> "polling.excutePolling" [  ]
    "polling.conditionSleep" -> "polling.reduceRefreshSeed" [  ]
    "polling.work" -> "polling.conditionSleep" [  ]
    "polling.StartMultiDispatcher" -> "polling.work" [ arrowhead="normalnoneodot" ]
    "polling.Run" -> "polling.StartMultiDispatcher" [ arrowhead="normalnoneodot" ]
}
